--------------------------------------------------------------------------------
-- Created: 13.05.2009 ---------------------------------------------------------
-- Description:	local network login page ---------------------------------------
-- Author: Alexander Maniluk ---------------------------------------------------
-- Mail: loopzilla@gsc-game.kiev.ua --------------------------------------------
-- (c)GSC Game World 2009 ------------------------------------------------------
--------------------------------------------------------------------------------

class "localnet_page" (CUIScriptWnd)
function localnet_page:__init() super()
   self:InitControls()
   self:InitCallbacks()
end

local kit_numb

function localnet_page:InitControls()
	local xml = CScriptXmlInit()
	xml:ParseFile("ui_mm_mp_localnet.xml")

--	self:SetWndRect(Frect():set(0,0,1024,768))
	
	self:SetWndRect(Frect():set(0,0,1920,1080))
	
	self:Enable(true)
	xml:InitStatic("background", self)

	self.login_page = CUIWindow()
	xml:InitWindow("login_page", 0, self.login_page)
	
	self.login_page:SetAutoDelete(true)
	self:AttachChild(self.login_page)
	
	xml:InitWindow("login_page", 0, self.login_page)
	self.lp_header_login = xml:InitTextWnd("login_page:cap_header_login", self.login_page)
	self.lp_header_login:Show(true)
	
	self.lp_header_registration = xml:InitTextWnd("login_page:cap_header_registration", self.login_page)
	self.lp_header_registration:Show(false)

	local button = nil
	button = xml:Init3tButton("login_page:button_login", self.login_page)
	self:Register(button, "btn_login")
    self.btn_login = button
	self.btn_login:Show(true)
	
	button = xml:Init3tButton("login_page:button_regist", self.login_page)
	self:Register(button, "btn_regist")
    self.btn_regist = button
	self.btn_regist:Show(false)

	button = xml:Init3tButton("login_page:button_cancel", self.login_page)
	self:Register(button, "btn_cancel")
    self.btn_cancel = button
	
	button = xml:Init3tButton("login_page:button_descr", self.login_page)
	self:Register(button, "btn_descr")
	self.btn_descr = button
	self.btn_descr:Show(false)
	
	button = xml:InitCheck("login_page:check_register_me", self.login_page)
	self:Register(button, "lp_check_register_me")
	self.lp_check_register_me = button
	
	button = xml:InitCheck("login_page:check_kit1", self.login_page)
	self:Register(button, "lp_check_kit_1")
	self.lp_check_kit_1 = button
	self.lp_check_kit_1:Show(false)
	self.lp_check_kit_1:SetCheck(true)
	
	button = xml:InitCheck("login_page:check_kit2", self.login_page)
	self:Register(button, "lp_check_kit_2")
	self.lp_check_kit_2 = button
	self.lp_check_kit_2:Show(false)
	
	button = xml:InitCheck("login_page:check_kit3", self.login_page)
	self:Register(button, "lp_check_kit_3")
	self.lp_check_kit_3 = button
	self.lp_check_kit_3:Show(false)
	
	button = xml:InitCheck("login_page:check_kit4", self.login_page)
	self:Register(button, "lp_check_kit_4")
	self.lp_check_kit_4 = button
	self.lp_check_kit_4:Show(false)
	
	self.text_descript	= xml:InitStatic("login_page:cap_descript",self.login_page)
	self.text_descript:Show(false)
 	self.lp_descript = xml:InitEditBox("login_page:edit_descript", self.login_page)
	self.lp_descript:Show(false)
	self:Register(self.lp_descript, "lp_edit_descript")
		
--------------------------------------------------------------------------------


	xml:InitTextWnd("login_page:cap_login", self.login_page)
	self.lp_nickname = xml:InitEditBox("login_page:edit_login", self.login_page)
	self:Register(self.lp_nickname, "lp_edit_nickname")
	
	xml:InitTextWnd("login_page:cap_password", self.login_page)
 	self.lp_password = xml:InitEditBox("login_page:edit_password", self.login_page)
	self:Register(self.lp_password, "lp_edit_password")
	
	xml:InitTextWnd("login_page:cap_ipserver", self.login_page)
 	self.lp_ip_server = xml:InitEditBox("login_page:edit_ip_server", self.login_page)
	self:Register(self.lp_ip_server, "lp_edit_ip_server")
	
	xml:InitTextWnd("login_page:cap_port", self.login_page)
 	self.lp_port = xml:InitEditBox("login_page:edit_port", self.login_page)
	self:Register(self.lp_port, "lp_edit_port")
	
	self.gs_login_message_box = CUIMessageBoxEx()
	self:Register(self.gs_login_message_box, "gs_message_box")
	
	local loginload = load_auth()
	if(loginload:loaded()) then
	local server   = loginload:ip()
	local nickname = loginload:name()
	local password = loginload:pass()
	local port 	   = loginload:port()
	

	self.lp_ip_server:SetText(server)
	self.lp_nickname:SetText(nickname)
	self.lp_password:SetText(password)
	self.lp_port:SetText(port)
	end

	self.lp_nickname:CaptureFocus(true)
end

function localnet_page:InitCallbacks()
	self:AddCallback("btn_login", ui_events.BUTTON_CLICKED, self.OnBtnLogin, self)
	self:AddCallback("btn_regist", ui_events.BUTTON_CLICKED, self.OnBtnLogin, self)
	self:AddCallback("btn_cancel", ui_events.BUTTON_CLICKED, self.OnBtnCancel, self)
	self:AddCallback("btn_descr", ui_events.BUTTON_CLICKED, self.OnBtnDescr, self)
	self:AddCallback("lp_check_kit_1", ui_events.BUTTON_CLICKED, self.OnBtnKit1, self)
	self:AddCallback("lp_check_kit_2", ui_events.BUTTON_CLICKED, self.OnBtnKit2, self)
	self:AddCallback("lp_check_kit_3", ui_events.BUTTON_CLICKED, self.OnBtnKit3, self)
	self:AddCallback("lp_check_kit_4", ui_events.BUTTON_CLICKED, self.OnBtnKit4, self)
	self:AddCallback("gs_message_box", ui_events.MESSAGE_BOX_OK_CLICKED, self.OnMsgOk, self)
end 

function localnet_page:Update()
CUIScriptWnd.Update(self)

if self.lp_check_register_me:GetCheck(true)then
registration_switch(true)
self.lp_descript:Show(true)
self.text_descript:Show(true)
self.btn_descr:Show(true)
self.lp_check_kit_1:Show(true)
self.lp_check_kit_2:Show(true)
self.lp_check_kit_3:Show(true)
self.lp_check_kit_4:Show(true)
self.btn_regist:Show(true)
self.btn_login:Show(false)
self.lp_header_login:Show(false)
self.lp_header_registration:Show(true)
else
registration_switch(false)
self.btn_descr:Show(false)
self.text_descript:Show(false)
self.lp_descript:Show(false)
self.lp_check_kit_1:Show(false)
self.lp_check_kit_2:Show(false)
self.lp_check_kit_3:Show(false)
self.lp_check_kit_4:Show(false)
self.btn_regist:Show(false)
self.btn_login:Show(true)
self.lp_header_login:Show(true)
self.lp_header_registration:Show(false)
end

if self.lp_check_kit_1:GetCheck(true) then

kit_numb = 1

elseif self.lp_check_kit_2:GetCheck(true) then

kit_numb = 2

elseif self.lp_check_kit_3:GetCheck(true) then

kit_numb = 3

elseif self.lp_check_kit_4:GetCheck(true) then

kit_numb = 4

end

end

function localnet_page:OnBtnKit1()
self.lp_check_kit_2:SetCheck(false)
self.lp_check_kit_3:SetCheck(false)
self.lp_check_kit_4:SetCheck(false)
end

function localnet_page:OnBtnKit2()
self.lp_check_kit_1:SetCheck(false)
self.lp_check_kit_3:SetCheck(false)
self.lp_check_kit_4:SetCheck(false)
end

function localnet_page:OnBtnKit3()
self.lp_check_kit_1:SetCheck(false)
self.lp_check_kit_2:SetCheck(false)
self.lp_check_kit_4:SetCheck(false)
end

function localnet_page:OnBtnKit4()
self.lp_check_kit_1:SetCheck(false)
self.lp_check_kit_2:SetCheck(false)
self.lp_check_kit_3:SetCheck(false)
end

function localnet_page:OnBtnLogin()
	local server   = self.lp_ip_server:GetText()
	local nickname = self.lp_nickname:GetText()
	local password = self.lp_password:GetText()
	local port 	   = self.lp_port:GetText()
	
	local descr = self.lp_descript:GetText()
	take_description(descr)
	
	save_auth(nickname, password, server, port)
	SetKit(kit_numb)
	
	local cmd = "start client("..server.."/port="..port.."/name="..nickname.."/pass="..password..")" 
	
	printf_msg(cmd)

	local console = get_console()
	console:execute(cmd)
end

function localnet_page:LoginOperationResult(profile, descr)

end

function localnet_page:OnMsgOk()
	printf_msg("OnMsgOk")
end

function localnet_page:OnBtnCancel()
	self:HideDialog()
	self.owner:ShowDialog(true)
	self.owner:Show(true)
end

function localnet_page:OnBtnDescr()
	if not(self.ln_dlg) then
        self.ln_dlg = ui_mm_mp_localnet_descr.localnet_desc_page()
        self.ln_dlg.owner = self
    end
    self.ln_dlg:ShowDialog(true)
	
	printf_msg("VK: https://vk.com/neareststage")
	printf_msg("Discord: https://discord.gg/DyuhyjR8UB")
	self:HideDialog()
	self:Show(false)
end

function localnet_page:OnBtnRememberMe()
	self.owner.l_mgr:save_remember_me_to_registry(self.lp_check_remember_me:GetCheck())
end

function localnet_page:OnEditLPNicknameChanged()
    self:OnBtnLogin()
end

function localnet_page:OnKeyboard(dik, keyboard_action)
	CUIScriptWnd.OnKeyboard(self,dik,keyboard_action)

	local bind = dik_to_bind(dik)
	local console = get_console()

	if keyboard_action == ui_events.WINDOW_KEY_PRESSED then
		if dik == DIK_keys.DIK_ESCAPE then
			self:OnBtnCancel()
		end
	end
	
	return true
end